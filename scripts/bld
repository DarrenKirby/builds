#!/usr/bin/perl

#    /bin/bld
#    Sun Oct 19 03:34:12 UTC 2014

#    The front end to the builds source building tree
#
#    Copyright:: (c) 2014 Darren Kirby
#    Author:: Darren Kirby (mailto:bulliver@gmail.com)

#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.

#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.

#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

#use Posix qw(setuid);
#setuid();

use warnings;

use lib "/usr/builds/scripts";
use Builds;
use Db;

# This is to shut up '-w'.
# These vars are set/used in the build file.
$md5sum      = undef;
$here        = undef;
$MAKEOPTS    = undef;
$CONFIG_OPTS = undef;

{
    my $args_n = scalar @ARGV;
    if ($args_n < 2) {
        red "bld requires one command and at least one package";
        show_usage();
        die;
    }
    $command = shift @ARGV;
    while (my $x = shift @ARGV) { push @builds_to_build, $x };
}

unless ($command ~~ @valid_commands) {
    red "$command is not a valid command";
    show_usage();
    die;
}

foreach my $build (@builds_to_build) {
    &get_tokens();
    &parse_config_file();
    # Source the build file we are going to install
    require $build;

    # Another default var. Cannot be defined until
    # after the build file is sourced.
    my @arr3 = split /\//x, $src_url;
    $PN = $arr3[-1];

    my $time_start = time();

    # Are we stepping or doing the works?
    if ($command eq "install") {
        do_all();
    } elsif ($command eq "fetch") {
        fetch_wrapper();
    } elsif ($command eq "install_src") {
        install_src_wrapper();
    } elsif ($command eq "configure") {
        configure_wrapper();
    } elsif ($command eq "make") {
        make_wrapper();
        make_install_wrapper();
    } elsif ($command eq "install") {
        install_wrapper();
    } elsif ($command eq "clean") {
        &clean_wrapper();
    } else { die "No such command: $command\n";} # Should never run

    my $time_end = time();
    my $elapsed = $time_end - $time_start;
    my $time_s = &format_time($elapsed);
    green "Package $PD successfully installed in $time_s\n";
}

